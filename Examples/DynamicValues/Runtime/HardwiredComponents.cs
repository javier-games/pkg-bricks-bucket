using System;
using System.Collections.Generic;

// ReSharper disable PossibleNullReferenceException
// ReSharper disable BuiltInTypeReferenceStyle
// ReSharper disable UnusedMember.Local
// ReSharper disable RedundantNameQualifier
// ReSharper disable StringLiteralTypo

namespace Monogum.BricksBucket.Core.Examples.DynamicProperties
{
	/// <summary>
	/// Registered types.
	/// 
	/// Since iOS cannot support System.Reflection, AbstractReference has to
	/// have this static class to cast values.
	/// 
	/// 
	/// <autogenerated>
	/// 
	/// This code was generated by a tool.
	/// Changes to this file may cause incorrect behavior and will
	/// be lost if the code is regenerated.
	/// 
	/// </autogenerated>
	/// 
	/// ----------------------------------------------------------
	/// Code generated on Wednesday, April 14, 2021 11:12:39 AM
	/// ----------------------------------------------------------
	///
	/// By Javier Garc√≠a.
	/// </summary>
    public sealed class HardwiredComponents : Monogum.BricksBucket.Core.Generics.AbstractComponentRegistry
	{
		/// <inheritdoc cref="Monogum.BricksBucket.Core.Generics.AbstractComponentRegistry.NameSpace"/>
		public override string NameSpace => "Monogum.BricksBucket.Core.Examples.DynamicProperties";

        /// <inheritdoc cref="Monogum.BricksBucket.Core.Generics.AbstractComponentRegistry.Path"/>
        public override string Path => "BricksBucket/Core/Examples/DynamicValues/Scripts";

		/// <inheritdoc cref="Monogum.BricksBucket.Core.Generics.AbstractComponentRegistry.ClassName"/>
		public override string ClassName => "HardwiredComponents";

        /// <inheritdoc cref="Monogum.BricksBucket.Core.Generics.AbstractComponentRegistry.Extension"/>
        public override string Extension => "cs";

		/// <inheritdoc cref="Monogum.BricksBucket.Core.Generics.AbstractComponentRegistry.ComponentTypesList"/>
        protected override List<Type> ComponentTypesList { get; } = 
            new List<Type>
		{
            
            typeof(UnityEngine.Camera),

            typeof(UnityEngine.Light),

            typeof(UnityEngine.Transform),

            typeof(UnityEngine.UI.Image)
        };

		/// <inheritdoc cref="Monogum.BricksBucket.Core.Generics.AbstractComponentRegistry.Set"/>
        protected override
			Dictionary<string, Dictionary<string, Action<object, object>>> Set
		{
			get;
		} = new Dictionary<string, Dictionary<string, Action<object, object>>>
        {
                            
            {
				#region UnityEngine.Camera

                "UnityEngine.Camera",
                new Dictionary<string, Action<object, object>>
                {
                    
                    {
                        "nearClipPlane",
                        (component, value) =>
                            (component as UnityEngine.Camera).nearClipPlane =
                                (System.Single) value
                    },
                    {
                        "farClipPlane",
                        (component, value) =>
                            (component as UnityEngine.Camera).farClipPlane =
                                (System.Single) value
                    },
                    {
                        "fieldOfView",
                        (component, value) =>
                            (component as UnityEngine.Camera).fieldOfView =
                                (System.Single) value
                    },
                    {
                        "renderingPath",
                        (component, value) =>
                            (component as UnityEngine.Camera).renderingPath =
                                (UnityEngine.RenderingPath) value
                    },
                    {
                        "allowHDR",
                        (component, value) =>
                            (component as UnityEngine.Camera).allowHDR =
                                (System.Boolean) value
                    },
                    {
                        "allowMSAA",
                        (component, value) =>
                            (component as UnityEngine.Camera).allowMSAA =
                                (System.Boolean) value
                    },
                    {
                        "allowDynamicResolution",
                        (component, value) =>
                            (component as UnityEngine.Camera).allowDynamicResolution =
                                (System.Boolean) value
                    },
                    {
                        "forceIntoRenderTexture",
                        (component, value) =>
                            (component as UnityEngine.Camera).forceIntoRenderTexture =
                                (System.Boolean) value
                    },
                    {
                        "orthographicSize",
                        (component, value) =>
                            (component as UnityEngine.Camera).orthographicSize =
                                (System.Single) value
                    },
                    {
                        "orthographic",
                        (component, value) =>
                            (component as UnityEngine.Camera).orthographic =
                                (System.Boolean) value
                    },
                    {
                        "opaqueSortMode",
                        (component, value) =>
                            (component as UnityEngine.Camera).opaqueSortMode =
                                (UnityEngine.Rendering.OpaqueSortMode) value
                    },
                    {
                        "transparencySortMode",
                        (component, value) =>
                            (component as UnityEngine.Camera).transparencySortMode =
                                (UnityEngine.TransparencySortMode) value
                    },
                    {
                        "transparencySortAxis",
                        (component, value) =>
                            (component as UnityEngine.Camera).transparencySortAxis =
                                (UnityEngine.Vector3) value
                    },
                    {
                        "depth",
                        (component, value) =>
                            (component as UnityEngine.Camera).depth =
                                (System.Single) value
                    },
                    {
                        "aspect",
                        (component, value) =>
                            (component as UnityEngine.Camera).aspect =
                                (System.Single) value
                    },
                    {
                        "cullingMask",
                        (component, value) =>
                            (component as UnityEngine.Camera).cullingMask =
                                (System.Int32) value
                    },
                    {
                        "eventMask",
                        (component, value) =>
                            (component as UnityEngine.Camera).eventMask =
                                (System.Int32) value
                    },
                    {
                        "layerCullSpherical",
                        (component, value) =>
                            (component as UnityEngine.Camera).layerCullSpherical =
                                (System.Boolean) value
                    },
                    {
                        "cameraType",
                        (component, value) =>
                            (component as UnityEngine.Camera).cameraType =
                                (UnityEngine.CameraType) value
                    },
                    {
                        "overrideSceneCullingMask",
                        (component, value) =>
                            (component as UnityEngine.Camera).overrideSceneCullingMask =
                                (System.UInt64) value
                    },
                    {
                        "layerCullDistances",
                        (component, value) =>
                            (component as UnityEngine.Camera).layerCullDistances =
                                (System.Single[]) value
                    },
                    {
                        "useOcclusionCulling",
                        (component, value) =>
                            (component as UnityEngine.Camera).useOcclusionCulling =
                                (System.Boolean) value
                    },
                    {
                        "cullingMatrix",
                        (component, value) =>
                            (component as UnityEngine.Camera).cullingMatrix =
                                (UnityEngine.Matrix4x4) value
                    },
                    {
                        "backgroundColor",
                        (component, value) =>
                            (component as UnityEngine.Camera).backgroundColor =
                                (UnityEngine.Color) value
                    },
                    {
                        "clearFlags",
                        (component, value) =>
                            (component as UnityEngine.Camera).clearFlags =
                                (UnityEngine.CameraClearFlags) value
                    },
                    {
                        "depthTextureMode",
                        (component, value) =>
                            (component as UnityEngine.Camera).depthTextureMode =
                                (UnityEngine.DepthTextureMode) value
                    },
                    {
                        "clearStencilAfterLightingPass",
                        (component, value) =>
                            (component as UnityEngine.Camera).clearStencilAfterLightingPass =
                                (System.Boolean) value
                    },
                    {
                        "usePhysicalProperties",
                        (component, value) =>
                            (component as UnityEngine.Camera).usePhysicalProperties =
                                (System.Boolean) value
                    },
                    {
                        "sensorSize",
                        (component, value) =>
                            (component as UnityEngine.Camera).sensorSize =
                                (UnityEngine.Vector2) value
                    },
                    {
                        "lensShift",
                        (component, value) =>
                            (component as UnityEngine.Camera).lensShift =
                                (UnityEngine.Vector2) value
                    },
                    {
                        "focalLength",
                        (component, value) =>
                            (component as UnityEngine.Camera).focalLength =
                                (System.Single) value
                    },
                    {
                        "gateFit",
                        (component, value) =>
                            (component as UnityEngine.Camera).gateFit =
                                (UnityEngine.Camera.GateFitMode) value
                    },
                    {
                        "rect",
                        (component, value) =>
                            (component as UnityEngine.Camera).rect =
                                (UnityEngine.Rect) value
                    },
                    {
                        "pixelRect",
                        (component, value) =>
                            (component as UnityEngine.Camera).pixelRect =
                                (UnityEngine.Rect) value
                    },
                    {
                        "targetTexture",
                        (component, value) =>
                            (component as UnityEngine.Camera).targetTexture =
                                (UnityEngine.RenderTexture) value
                    },
                    {
                        "targetDisplay",
                        (component, value) =>
                            (component as UnityEngine.Camera).targetDisplay =
                                (System.Int32) value
                    },
                    {
                        "worldToCameraMatrix",
                        (component, value) =>
                            (component as UnityEngine.Camera).worldToCameraMatrix =
                                (UnityEngine.Matrix4x4) value
                    },
                    {
                        "projectionMatrix",
                        (component, value) =>
                            (component as UnityEngine.Camera).projectionMatrix =
                                (UnityEngine.Matrix4x4) value
                    },
                    {
                        "nonJitteredProjectionMatrix",
                        (component, value) =>
                            (component as UnityEngine.Camera).nonJitteredProjectionMatrix =
                                (UnityEngine.Matrix4x4) value
                    },
                    {
                        "useJitteredProjectionMatrixForTransparentRendering",
                        (component, value) =>
                            (component as UnityEngine.Camera).useJitteredProjectionMatrixForTransparentRendering =
                                (System.Boolean) value
                    },
                    {
                        "scene",
                        (component, value) =>
                            (component as UnityEngine.Camera).scene =
                                (UnityEngine.SceneManagement.Scene) value
                    },
                    {
                        "stereoSeparation",
                        (component, value) =>
                            (component as UnityEngine.Camera).stereoSeparation =
                                (System.Single) value
                    },
                    {
                        "stereoConvergence",
                        (component, value) =>
                            (component as UnityEngine.Camera).stereoConvergence =
                                (System.Single) value
                    },
                    {
                        "stereoTargetEye",
                        (component, value) =>
                            (component as UnityEngine.Camera).stereoTargetEye =
                                (UnityEngine.StereoTargetEyeMask) value
                    },
                    {
                        "enabled",
                        (component, value) =>
                            (component as UnityEngine.Camera).enabled =
                                (System.Boolean) value
                    },
                    {
                        "tag",
                        (component, value) =>
                            (component as UnityEngine.Camera).tag =
                                (System.String) value
                    },
                    {
                        "name",
                        (component, value) =>
                            (component as UnityEngine.Camera).name =
                                (System.String) value
                    },
                    {
                        "hideFlags",
                        (component, value) =>
                            (component as UnityEngine.Camera).hideFlags =
                                (UnityEngine.HideFlags) value
                    }
                }

                #endregion
            },
                
            {
				#region UnityEngine.Light

                "UnityEngine.Light",
                new Dictionary<string, Action<object, object>>
                {
                    
                    {
                        "type",
                        (component, value) =>
                            (component as UnityEngine.Light).type =
                                (UnityEngine.LightType) value
                    },
                    {
                        "shape",
                        (component, value) =>
                            (component as UnityEngine.Light).shape =
                                (UnityEngine.LightShape) value
                    },
                    {
                        "spotAngle",
                        (component, value) =>
                            (component as UnityEngine.Light).spotAngle =
                                (System.Single) value
                    },
                    {
                        "innerSpotAngle",
                        (component, value) =>
                            (component as UnityEngine.Light).innerSpotAngle =
                                (System.Single) value
                    },
                    {
                        "color",
                        (component, value) =>
                            (component as UnityEngine.Light).color =
                                (UnityEngine.Color) value
                    },
                    {
                        "colorTemperature",
                        (component, value) =>
                            (component as UnityEngine.Light).colorTemperature =
                                (System.Single) value
                    },
                    {
                        "useColorTemperature",
                        (component, value) =>
                            (component as UnityEngine.Light).useColorTemperature =
                                (System.Boolean) value
                    },
                    {
                        "intensity",
                        (component, value) =>
                            (component as UnityEngine.Light).intensity =
                                (System.Single) value
                    },
                    {
                        "bounceIntensity",
                        (component, value) =>
                            (component as UnityEngine.Light).bounceIntensity =
                                (System.Single) value
                    },
                    {
                        "useBoundingSphereOverride",
                        (component, value) =>
                            (component as UnityEngine.Light).useBoundingSphereOverride =
                                (System.Boolean) value
                    },
                    {
                        "boundingSphereOverride",
                        (component, value) =>
                            (component as UnityEngine.Light).boundingSphereOverride =
                                (UnityEngine.Vector4) value
                    },
                    {
                        "useViewFrustumForShadowCasterCull",
                        (component, value) =>
                            (component as UnityEngine.Light).useViewFrustumForShadowCasterCull =
                                (System.Boolean) value
                    },
                    {
                        "shadowCustomResolution",
                        (component, value) =>
                            (component as UnityEngine.Light).shadowCustomResolution =
                                (System.Int32) value
                    },
                    {
                        "shadowBias",
                        (component, value) =>
                            (component as UnityEngine.Light).shadowBias =
                                (System.Single) value
                    },
                    {
                        "shadowNormalBias",
                        (component, value) =>
                            (component as UnityEngine.Light).shadowNormalBias =
                                (System.Single) value
                    },
                    {
                        "shadowNearPlane",
                        (component, value) =>
                            (component as UnityEngine.Light).shadowNearPlane =
                                (System.Single) value
                    },
                    {
                        "useShadowMatrixOverride",
                        (component, value) =>
                            (component as UnityEngine.Light).useShadowMatrixOverride =
                                (System.Boolean) value
                    },
                    {
                        "shadowMatrixOverride",
                        (component, value) =>
                            (component as UnityEngine.Light).shadowMatrixOverride =
                                (UnityEngine.Matrix4x4) value
                    },
                    {
                        "range",
                        (component, value) =>
                            (component as UnityEngine.Light).range =
                                (System.Single) value
                    },
                    {
                        "flare",
                        (component, value) =>
                            (component as UnityEngine.Light).flare =
                                (UnityEngine.Flare) value
                    },
                    {
                        "bakingOutput",
                        (component, value) =>
                            (component as UnityEngine.Light).bakingOutput =
                                (UnityEngine.LightBakingOutput) value
                    },
                    {
                        "cullingMask",
                        (component, value) =>
                            (component as UnityEngine.Light).cullingMask =
                                (System.Int32) value
                    },
                    {
                        "renderingLayerMask",
                        (component, value) =>
                            (component as UnityEngine.Light).renderingLayerMask =
                                (System.Int32) value
                    },
                    {
                        "lightShadowCasterMode",
                        (component, value) =>
                            (component as UnityEngine.Light).lightShadowCasterMode =
                                (UnityEngine.LightShadowCasterMode) value
                    },
                    {
                        "shadowRadius",
                        (component, value) =>
                            (component as UnityEngine.Light).shadowRadius =
                                (System.Single) value
                    },
                    {
                        "shadowAngle",
                        (component, value) =>
                            (component as UnityEngine.Light).shadowAngle =
                                (System.Single) value
                    },
                    {
                        "shadows",
                        (component, value) =>
                            (component as UnityEngine.Light).shadows =
                                (UnityEngine.LightShadows) value
                    },
                    {
                        "shadowStrength",
                        (component, value) =>
                            (component as UnityEngine.Light).shadowStrength =
                                (System.Single) value
                    },
                    {
                        "shadowResolution",
                        (component, value) =>
                            (component as UnityEngine.Light).shadowResolution =
                                (UnityEngine.Rendering.LightShadowResolution) value
                    },
                    {
                        "layerShadowCullDistances",
                        (component, value) =>
                            (component as UnityEngine.Light).layerShadowCullDistances =
                                (System.Single[]) value
                    },
                    {
                        "cookieSize",
                        (component, value) =>
                            (component as UnityEngine.Light).cookieSize =
                                (System.Single) value
                    },
                    {
                        "cookie",
                        (component, value) =>
                            (component as UnityEngine.Light).cookie =
                                (UnityEngine.Texture) value
                    },
                    {
                        "renderMode",
                        (component, value) =>
                            (component as UnityEngine.Light).renderMode =
                                (UnityEngine.LightRenderMode) value
                    },
                    {
                        "areaSize",
                        (component, value) =>
                            (component as UnityEngine.Light).areaSize =
                                (UnityEngine.Vector2) value
                    },
                    {
                        "lightmapBakeType",
                        (component, value) =>
                            (component as UnityEngine.Light).lightmapBakeType =
                                (UnityEngine.LightmapBakeType) value
                    },
                    {
                        "enabled",
                        (component, value) =>
                            (component as UnityEngine.Light).enabled =
                                (System.Boolean) value
                    },
                    {
                        "tag",
                        (component, value) =>
                            (component as UnityEngine.Light).tag =
                                (System.String) value
                    },
                    {
                        "name",
                        (component, value) =>
                            (component as UnityEngine.Light).name =
                                (System.String) value
                    },
                    {
                        "hideFlags",
                        (component, value) =>
                            (component as UnityEngine.Light).hideFlags =
                                (UnityEngine.HideFlags) value
                    }
                }

                #endregion
            },
                
            {
				#region UnityEngine.Transform

                "UnityEngine.Transform",
                new Dictionary<string, Action<object, object>>
                {
                    
                    {
                        "position",
                        (component, value) =>
                            (component as UnityEngine.Transform).position =
                                (UnityEngine.Vector3) value
                    },
                    {
                        "localPosition",
                        (component, value) =>
                            (component as UnityEngine.Transform).localPosition =
                                (UnityEngine.Vector3) value
                    },
                    {
                        "eulerAngles",
                        (component, value) =>
                            (component as UnityEngine.Transform).eulerAngles =
                                (UnityEngine.Vector3) value
                    },
                    {
                        "localEulerAngles",
                        (component, value) =>
                            (component as UnityEngine.Transform).localEulerAngles =
                                (UnityEngine.Vector3) value
                    },
                    {
                        "right",
                        (component, value) =>
                            (component as UnityEngine.Transform).right =
                                (UnityEngine.Vector3) value
                    },
                    {
                        "up",
                        (component, value) =>
                            (component as UnityEngine.Transform).up =
                                (UnityEngine.Vector3) value
                    },
                    {
                        "forward",
                        (component, value) =>
                            (component as UnityEngine.Transform).forward =
                                (UnityEngine.Vector3) value
                    },
                    {
                        "rotation",
                        (component, value) =>
                            (component as UnityEngine.Transform).rotation =
                                (UnityEngine.Quaternion) value
                    },
                    {
                        "localRotation",
                        (component, value) =>
                            (component as UnityEngine.Transform).localRotation =
                                (UnityEngine.Quaternion) value
                    },
                    {
                        "localScale",
                        (component, value) =>
                            (component as UnityEngine.Transform).localScale =
                                (UnityEngine.Vector3) value
                    },
                    {
                        "parent",
                        (component, value) =>
                            (component as UnityEngine.Transform).parent =
                                (UnityEngine.Transform) value
                    },
                    {
                        "hasChanged",
                        (component, value) =>
                            (component as UnityEngine.Transform).hasChanged =
                                (System.Boolean) value
                    },
                    {
                        "hierarchyCapacity",
                        (component, value) =>
                            (component as UnityEngine.Transform).hierarchyCapacity =
                                (System.Int32) value
                    },
                    {
                        "tag",
                        (component, value) =>
                            (component as UnityEngine.Transform).tag =
                                (System.String) value
                    },
                    {
                        "name",
                        (component, value) =>
                            (component as UnityEngine.Transform).name =
                                (System.String) value
                    },
                    {
                        "hideFlags",
                        (component, value) =>
                            (component as UnityEngine.Transform).hideFlags =
                                (UnityEngine.HideFlags) value
                    }
                }

                #endregion
            },
                
            {
				#region UnityEngine.UI.Image

                "UnityEngine.UI.Image",
                new Dictionary<string, Action<object, object>>
                {
                    
                    {
                        "sprite",
                        (component, value) =>
                            (component as UnityEngine.UI.Image).sprite =
                                (UnityEngine.Sprite) value
                    },
                    {
                        "overrideSprite",
                        (component, value) =>
                            (component as UnityEngine.UI.Image).overrideSprite =
                                (UnityEngine.Sprite) value
                    },
                    {
                        "type",
                        (component, value) =>
                            (component as UnityEngine.UI.Image).type =
                                (UnityEngine.UI.Image.Type) value
                    },
                    {
                        "preserveAspect",
                        (component, value) =>
                            (component as UnityEngine.UI.Image).preserveAspect =
                                (System.Boolean) value
                    },
                    {
                        "fillCenter",
                        (component, value) =>
                            (component as UnityEngine.UI.Image).fillCenter =
                                (System.Boolean) value
                    },
                    {
                        "fillMethod",
                        (component, value) =>
                            (component as UnityEngine.UI.Image).fillMethod =
                                (UnityEngine.UI.Image.FillMethod) value
                    },
                    {
                        "fillAmount",
                        (component, value) =>
                            (component as UnityEngine.UI.Image).fillAmount =
                                (System.Single) value
                    },
                    {
                        "fillClockwise",
                        (component, value) =>
                            (component as UnityEngine.UI.Image).fillClockwise =
                                (System.Boolean) value
                    },
                    {
                        "fillOrigin",
                        (component, value) =>
                            (component as UnityEngine.UI.Image).fillOrigin =
                                (System.Int32) value
                    },
                    {
                        "alphaHitTestMinimumThreshold",
                        (component, value) =>
                            (component as UnityEngine.UI.Image).alphaHitTestMinimumThreshold =
                                (System.Single) value
                    },
                    {
                        "useSpriteMesh",
                        (component, value) =>
                            (component as UnityEngine.UI.Image).useSpriteMesh =
                                (System.Boolean) value
                    },
                    {
                        "pixelsPerUnitMultiplier",
                        (component, value) =>
                            (component as UnityEngine.UI.Image).pixelsPerUnitMultiplier =
                                (System.Single) value
                    },
                    {
                        "material",
                        (component, value) =>
                            (component as UnityEngine.UI.Image).material =
                                (UnityEngine.Material) value
                    },
                    {
                        "onCullStateChanged",
                        (component, value) =>
                            (component as UnityEngine.UI.Image).onCullStateChanged =
                                (UnityEngine.UI.MaskableGraphic.CullStateChangedEvent) value
                    },
                    {
                        "maskable",
                        (component, value) =>
                            (component as UnityEngine.UI.Image).maskable =
                                (System.Boolean) value
                    },
                    {
                        "isMaskingGraphic",
                        (component, value) =>
                            (component as UnityEngine.UI.Image).isMaskingGraphic =
                                (System.Boolean) value
                    },
                    {
                        "color",
                        (component, value) =>
                            (component as UnityEngine.UI.Image).color =
                                (UnityEngine.Color) value
                    },
                    {
                        "raycastTarget",
                        (component, value) =>
                            (component as UnityEngine.UI.Image).raycastTarget =
                                (System.Boolean) value
                    },
                    {
                        "raycastPadding",
                        (component, value) =>
                            (component as UnityEngine.UI.Image).raycastPadding =
                                (UnityEngine.Vector4) value
                    },
                    {
                        "useGUILayout",
                        (component, value) =>
                            (component as UnityEngine.UI.Image).useGUILayout =
                                (System.Boolean) value
                    },
                    {
                        "enabled",
                        (component, value) =>
                            (component as UnityEngine.UI.Image).enabled =
                                (System.Boolean) value
                    },
                    {
                        "tag",
                        (component, value) =>
                            (component as UnityEngine.UI.Image).tag =
                                (System.String) value
                    },
                    {
                        "name",
                        (component, value) =>
                            (component as UnityEngine.UI.Image).name =
                                (System.String) value
                    },
                    {
                        "hideFlags",
                        (component, value) =>
                            (component as UnityEngine.UI.Image).hideFlags =
                                (UnityEngine.HideFlags) value
                    }
                }

                #endregion
            }
		};

		/// <inheritdoc cref="Monogum.BricksBucket.Core.Generics.AbstractComponentRegistry.Get"/>
        protected override
			Dictionary<string, Dictionary<string, Func<object, object>>> Get
		{
			get;
		} = new Dictionary<string, Dictionary<string, Func<object, object>>>
		{
                            
            {
				#region UnityEngine.Camera

                "UnityEngine.Camera",
                new Dictionary<string, Func<object, object>>
                {
                    
                    {
                        "nearClipPlane",
                        (component) =>
                            (component as UnityEngine.Camera).nearClipPlane
                    },
                    {
                        "farClipPlane",
                        (component) =>
                            (component as UnityEngine.Camera).farClipPlane
                    },
                    {
                        "fieldOfView",
                        (component) =>
                            (component as UnityEngine.Camera).fieldOfView
                    },
                    {
                        "renderingPath",
                        (component) =>
                            (component as UnityEngine.Camera).renderingPath
                    },
                    {
                        "allowHDR",
                        (component) =>
                            (component as UnityEngine.Camera).allowHDR
                    },
                    {
                        "allowMSAA",
                        (component) =>
                            (component as UnityEngine.Camera).allowMSAA
                    },
                    {
                        "allowDynamicResolution",
                        (component) =>
                            (component as UnityEngine.Camera).allowDynamicResolution
                    },
                    {
                        "forceIntoRenderTexture",
                        (component) =>
                            (component as UnityEngine.Camera).forceIntoRenderTexture
                    },
                    {
                        "orthographicSize",
                        (component) =>
                            (component as UnityEngine.Camera).orthographicSize
                    },
                    {
                        "orthographic",
                        (component) =>
                            (component as UnityEngine.Camera).orthographic
                    },
                    {
                        "opaqueSortMode",
                        (component) =>
                            (component as UnityEngine.Camera).opaqueSortMode
                    },
                    {
                        "transparencySortMode",
                        (component) =>
                            (component as UnityEngine.Camera).transparencySortMode
                    },
                    {
                        "transparencySortAxis",
                        (component) =>
                            (component as UnityEngine.Camera).transparencySortAxis
                    },
                    {
                        "depth",
                        (component) =>
                            (component as UnityEngine.Camera).depth
                    },
                    {
                        "aspect",
                        (component) =>
                            (component as UnityEngine.Camera).aspect
                    },
                    {
                        "cullingMask",
                        (component) =>
                            (component as UnityEngine.Camera).cullingMask
                    },
                    {
                        "eventMask",
                        (component) =>
                            (component as UnityEngine.Camera).eventMask
                    },
                    {
                        "layerCullSpherical",
                        (component) =>
                            (component as UnityEngine.Camera).layerCullSpherical
                    },
                    {
                        "cameraType",
                        (component) =>
                            (component as UnityEngine.Camera).cameraType
                    },
                    {
                        "overrideSceneCullingMask",
                        (component) =>
                            (component as UnityEngine.Camera).overrideSceneCullingMask
                    },
                    {
                        "layerCullDistances",
                        (component) =>
                            (component as UnityEngine.Camera).layerCullDistances
                    },
                    {
                        "useOcclusionCulling",
                        (component) =>
                            (component as UnityEngine.Camera).useOcclusionCulling
                    },
                    {
                        "cullingMatrix",
                        (component) =>
                            (component as UnityEngine.Camera).cullingMatrix
                    },
                    {
                        "backgroundColor",
                        (component) =>
                            (component as UnityEngine.Camera).backgroundColor
                    },
                    {
                        "clearFlags",
                        (component) =>
                            (component as UnityEngine.Camera).clearFlags
                    },
                    {
                        "depthTextureMode",
                        (component) =>
                            (component as UnityEngine.Camera).depthTextureMode
                    },
                    {
                        "clearStencilAfterLightingPass",
                        (component) =>
                            (component as UnityEngine.Camera).clearStencilAfterLightingPass
                    },
                    {
                        "usePhysicalProperties",
                        (component) =>
                            (component as UnityEngine.Camera).usePhysicalProperties
                    },
                    {
                        "sensorSize",
                        (component) =>
                            (component as UnityEngine.Camera).sensorSize
                    },
                    {
                        "lensShift",
                        (component) =>
                            (component as UnityEngine.Camera).lensShift
                    },
                    {
                        "focalLength",
                        (component) =>
                            (component as UnityEngine.Camera).focalLength
                    },
                    {
                        "gateFit",
                        (component) =>
                            (component as UnityEngine.Camera).gateFit
                    },
                    {
                        "rect",
                        (component) =>
                            (component as UnityEngine.Camera).rect
                    },
                    {
                        "pixelRect",
                        (component) =>
                            (component as UnityEngine.Camera).pixelRect
                    },
                    {
                        "targetTexture",
                        (component) =>
                            (component as UnityEngine.Camera).targetTexture
                    },
                    {
                        "targetDisplay",
                        (component) =>
                            (component as UnityEngine.Camera).targetDisplay
                    },
                    {
                        "worldToCameraMatrix",
                        (component) =>
                            (component as UnityEngine.Camera).worldToCameraMatrix
                    },
                    {
                        "projectionMatrix",
                        (component) =>
                            (component as UnityEngine.Camera).projectionMatrix
                    },
                    {
                        "nonJitteredProjectionMatrix",
                        (component) =>
                            (component as UnityEngine.Camera).nonJitteredProjectionMatrix
                    },
                    {
                        "useJitteredProjectionMatrixForTransparentRendering",
                        (component) =>
                            (component as UnityEngine.Camera).useJitteredProjectionMatrixForTransparentRendering
                    },
                    {
                        "scene",
                        (component) =>
                            (component as UnityEngine.Camera).scene
                    },
                    {
                        "stereoSeparation",
                        (component) =>
                            (component as UnityEngine.Camera).stereoSeparation
                    },
                    {
                        "stereoConvergence",
                        (component) =>
                            (component as UnityEngine.Camera).stereoConvergence
                    },
                    {
                        "stereoTargetEye",
                        (component) =>
                            (component as UnityEngine.Camera).stereoTargetEye
                    },
                    {
                        "enabled",
                        (component) =>
                            (component as UnityEngine.Camera).enabled
                    },
                    {
                        "tag",
                        (component) =>
                            (component as UnityEngine.Camera).tag
                    },
                    {
                        "name",
                        (component) =>
                            (component as UnityEngine.Camera).name
                    },
                    {
                        "hideFlags",
                        (component) =>
                            (component as UnityEngine.Camera).hideFlags
                    }
                }

                #endregion
            },
                
            {
				#region UnityEngine.Light

                "UnityEngine.Light",
                new Dictionary<string, Func<object, object>>
                {
                    
                    {
                        "type",
                        (component) =>
                            (component as UnityEngine.Light).type
                    },
                    {
                        "shape",
                        (component) =>
                            (component as UnityEngine.Light).shape
                    },
                    {
                        "spotAngle",
                        (component) =>
                            (component as UnityEngine.Light).spotAngle
                    },
                    {
                        "innerSpotAngle",
                        (component) =>
                            (component as UnityEngine.Light).innerSpotAngle
                    },
                    {
                        "color",
                        (component) =>
                            (component as UnityEngine.Light).color
                    },
                    {
                        "colorTemperature",
                        (component) =>
                            (component as UnityEngine.Light).colorTemperature
                    },
                    {
                        "useColorTemperature",
                        (component) =>
                            (component as UnityEngine.Light).useColorTemperature
                    },
                    {
                        "intensity",
                        (component) =>
                            (component as UnityEngine.Light).intensity
                    },
                    {
                        "bounceIntensity",
                        (component) =>
                            (component as UnityEngine.Light).bounceIntensity
                    },
                    {
                        "useBoundingSphereOverride",
                        (component) =>
                            (component as UnityEngine.Light).useBoundingSphereOverride
                    },
                    {
                        "boundingSphereOverride",
                        (component) =>
                            (component as UnityEngine.Light).boundingSphereOverride
                    },
                    {
                        "useViewFrustumForShadowCasterCull",
                        (component) =>
                            (component as UnityEngine.Light).useViewFrustumForShadowCasterCull
                    },
                    {
                        "shadowCustomResolution",
                        (component) =>
                            (component as UnityEngine.Light).shadowCustomResolution
                    },
                    {
                        "shadowBias",
                        (component) =>
                            (component as UnityEngine.Light).shadowBias
                    },
                    {
                        "shadowNormalBias",
                        (component) =>
                            (component as UnityEngine.Light).shadowNormalBias
                    },
                    {
                        "shadowNearPlane",
                        (component) =>
                            (component as UnityEngine.Light).shadowNearPlane
                    },
                    {
                        "useShadowMatrixOverride",
                        (component) =>
                            (component as UnityEngine.Light).useShadowMatrixOverride
                    },
                    {
                        "shadowMatrixOverride",
                        (component) =>
                            (component as UnityEngine.Light).shadowMatrixOverride
                    },
                    {
                        "range",
                        (component) =>
                            (component as UnityEngine.Light).range
                    },
                    {
                        "flare",
                        (component) =>
                            (component as UnityEngine.Light).flare
                    },
                    {
                        "bakingOutput",
                        (component) =>
                            (component as UnityEngine.Light).bakingOutput
                    },
                    {
                        "cullingMask",
                        (component) =>
                            (component as UnityEngine.Light).cullingMask
                    },
                    {
                        "renderingLayerMask",
                        (component) =>
                            (component as UnityEngine.Light).renderingLayerMask
                    },
                    {
                        "lightShadowCasterMode",
                        (component) =>
                            (component as UnityEngine.Light).lightShadowCasterMode
                    },
                    {
                        "shadowRadius",
                        (component) =>
                            (component as UnityEngine.Light).shadowRadius
                    },
                    {
                        "shadowAngle",
                        (component) =>
                            (component as UnityEngine.Light).shadowAngle
                    },
                    {
                        "shadows",
                        (component) =>
                            (component as UnityEngine.Light).shadows
                    },
                    {
                        "shadowStrength",
                        (component) =>
                            (component as UnityEngine.Light).shadowStrength
                    },
                    {
                        "shadowResolution",
                        (component) =>
                            (component as UnityEngine.Light).shadowResolution
                    },
                    {
                        "layerShadowCullDistances",
                        (component) =>
                            (component as UnityEngine.Light).layerShadowCullDistances
                    },
                    {
                        "cookieSize",
                        (component) =>
                            (component as UnityEngine.Light).cookieSize
                    },
                    {
                        "cookie",
                        (component) =>
                            (component as UnityEngine.Light).cookie
                    },
                    {
                        "renderMode",
                        (component) =>
                            (component as UnityEngine.Light).renderMode
                    },
                    {
                        "areaSize",
                        (component) =>
                            (component as UnityEngine.Light).areaSize
                    },
                    {
                        "lightmapBakeType",
                        (component) =>
                            (component as UnityEngine.Light).lightmapBakeType
                    },
                    {
                        "enabled",
                        (component) =>
                            (component as UnityEngine.Light).enabled
                    },
                    {
                        "tag",
                        (component) =>
                            (component as UnityEngine.Light).tag
                    },
                    {
                        "name",
                        (component) =>
                            (component as UnityEngine.Light).name
                    },
                    {
                        "hideFlags",
                        (component) =>
                            (component as UnityEngine.Light).hideFlags
                    }
                }

                #endregion
            },
                
            {
				#region UnityEngine.Transform

                "UnityEngine.Transform",
                new Dictionary<string, Func<object, object>>
                {
                    
                    {
                        "position",
                        (component) =>
                            (component as UnityEngine.Transform).position
                    },
                    {
                        "localPosition",
                        (component) =>
                            (component as UnityEngine.Transform).localPosition
                    },
                    {
                        "eulerAngles",
                        (component) =>
                            (component as UnityEngine.Transform).eulerAngles
                    },
                    {
                        "localEulerAngles",
                        (component) =>
                            (component as UnityEngine.Transform).localEulerAngles
                    },
                    {
                        "right",
                        (component) =>
                            (component as UnityEngine.Transform).right
                    },
                    {
                        "up",
                        (component) =>
                            (component as UnityEngine.Transform).up
                    },
                    {
                        "forward",
                        (component) =>
                            (component as UnityEngine.Transform).forward
                    },
                    {
                        "rotation",
                        (component) =>
                            (component as UnityEngine.Transform).rotation
                    },
                    {
                        "localRotation",
                        (component) =>
                            (component as UnityEngine.Transform).localRotation
                    },
                    {
                        "localScale",
                        (component) =>
                            (component as UnityEngine.Transform).localScale
                    },
                    {
                        "parent",
                        (component) =>
                            (component as UnityEngine.Transform).parent
                    },
                    {
                        "hasChanged",
                        (component) =>
                            (component as UnityEngine.Transform).hasChanged
                    },
                    {
                        "hierarchyCapacity",
                        (component) =>
                            (component as UnityEngine.Transform).hierarchyCapacity
                    },
                    {
                        "tag",
                        (component) =>
                            (component as UnityEngine.Transform).tag
                    },
                    {
                        "name",
                        (component) =>
                            (component as UnityEngine.Transform).name
                    },
                    {
                        "hideFlags",
                        (component) =>
                            (component as UnityEngine.Transform).hideFlags
                    }
                }

                #endregion
            },
                
            {
				#region UnityEngine.UI.Image

                "UnityEngine.UI.Image",
                new Dictionary<string, Func<object, object>>
                {
                    
                    {
                        "sprite",
                        (component) =>
                            (component as UnityEngine.UI.Image).sprite
                    },
                    {
                        "overrideSprite",
                        (component) =>
                            (component as UnityEngine.UI.Image).overrideSprite
                    },
                    {
                        "type",
                        (component) =>
                            (component as UnityEngine.UI.Image).type
                    },
                    {
                        "preserveAspect",
                        (component) =>
                            (component as UnityEngine.UI.Image).preserveAspect
                    },
                    {
                        "fillCenter",
                        (component) =>
                            (component as UnityEngine.UI.Image).fillCenter
                    },
                    {
                        "fillMethod",
                        (component) =>
                            (component as UnityEngine.UI.Image).fillMethod
                    },
                    {
                        "fillAmount",
                        (component) =>
                            (component as UnityEngine.UI.Image).fillAmount
                    },
                    {
                        "fillClockwise",
                        (component) =>
                            (component as UnityEngine.UI.Image).fillClockwise
                    },
                    {
                        "fillOrigin",
                        (component) =>
                            (component as UnityEngine.UI.Image).fillOrigin
                    },
                    {
                        "alphaHitTestMinimumThreshold",
                        (component) =>
                            (component as UnityEngine.UI.Image).alphaHitTestMinimumThreshold
                    },
                    {
                        "useSpriteMesh",
                        (component) =>
                            (component as UnityEngine.UI.Image).useSpriteMesh
                    },
                    {
                        "pixelsPerUnitMultiplier",
                        (component) =>
                            (component as UnityEngine.UI.Image).pixelsPerUnitMultiplier
                    },
                    {
                        "material",
                        (component) =>
                            (component as UnityEngine.UI.Image).material
                    },
                    {
                        "onCullStateChanged",
                        (component) =>
                            (component as UnityEngine.UI.Image).onCullStateChanged
                    },
                    {
                        "maskable",
                        (component) =>
                            (component as UnityEngine.UI.Image).maskable
                    },
                    {
                        "isMaskingGraphic",
                        (component) =>
                            (component as UnityEngine.UI.Image).isMaskingGraphic
                    },
                    {
                        "color",
                        (component) =>
                            (component as UnityEngine.UI.Image).color
                    },
                    {
                        "raycastTarget",
                        (component) =>
                            (component as UnityEngine.UI.Image).raycastTarget
                    },
                    {
                        "raycastPadding",
                        (component) =>
                            (component as UnityEngine.UI.Image).raycastPadding
                    },
                    {
                        "useGUILayout",
                        (component) =>
                            (component as UnityEngine.UI.Image).useGUILayout
                    },
                    {
                        "enabled",
                        (component) =>
                            (component as UnityEngine.UI.Image).enabled
                    },
                    {
                        "tag",
                        (component) =>
                            (component as UnityEngine.UI.Image).tag
                    },
                    {
                        "name",
                        (component) =>
                            (component as UnityEngine.UI.Image).name
                    },
                    {
                        "hideFlags",
                        (component) =>
                            (component as UnityEngine.UI.Image).hideFlags
                    }
                }

                #endregion
            }
        };

		/// <inheritdoc cref="Monogum.BricksBucket.Core.Generics.AbstractComponentRegistry.PropertyType"/>
        protected override
			Dictionary<string, Dictionary<string, Type>> PropertyType
		{
			get;
		} = new Dictionary<string, Dictionary<string, Type>>
		{
                            
            {
				#region UnityEngine.Camera

                "UnityEngine.Camera",
                new Dictionary<string, Type>
                {
                    
                    {
                        "nearClipPlane",
                        typeof(System.Single)
                    },
                    {
                        "farClipPlane",
                        typeof(System.Single)
                    },
                    {
                        "fieldOfView",
                        typeof(System.Single)
                    },
                    {
                        "renderingPath",
                        typeof(UnityEngine.RenderingPath)
                    },
                    {
                        "allowHDR",
                        typeof(System.Boolean)
                    },
                    {
                        "allowMSAA",
                        typeof(System.Boolean)
                    },
                    {
                        "allowDynamicResolution",
                        typeof(System.Boolean)
                    },
                    {
                        "forceIntoRenderTexture",
                        typeof(System.Boolean)
                    },
                    {
                        "orthographicSize",
                        typeof(System.Single)
                    },
                    {
                        "orthographic",
                        typeof(System.Boolean)
                    },
                    {
                        "opaqueSortMode",
                        typeof(UnityEngine.Rendering.OpaqueSortMode)
                    },
                    {
                        "transparencySortMode",
                        typeof(UnityEngine.TransparencySortMode)
                    },
                    {
                        "transparencySortAxis",
                        typeof(UnityEngine.Vector3)
                    },
                    {
                        "depth",
                        typeof(System.Single)
                    },
                    {
                        "aspect",
                        typeof(System.Single)
                    },
                    {
                        "cullingMask",
                        typeof(System.Int32)
                    },
                    {
                        "eventMask",
                        typeof(System.Int32)
                    },
                    {
                        "layerCullSpherical",
                        typeof(System.Boolean)
                    },
                    {
                        "cameraType",
                        typeof(UnityEngine.CameraType)
                    },
                    {
                        "overrideSceneCullingMask",
                        typeof(System.UInt64)
                    },
                    {
                        "layerCullDistances",
                        typeof(System.Single[])
                    },
                    {
                        "useOcclusionCulling",
                        typeof(System.Boolean)
                    },
                    {
                        "cullingMatrix",
                        typeof(UnityEngine.Matrix4x4)
                    },
                    {
                        "backgroundColor",
                        typeof(UnityEngine.Color)
                    },
                    {
                        "clearFlags",
                        typeof(UnityEngine.CameraClearFlags)
                    },
                    {
                        "depthTextureMode",
                        typeof(UnityEngine.DepthTextureMode)
                    },
                    {
                        "clearStencilAfterLightingPass",
                        typeof(System.Boolean)
                    },
                    {
                        "usePhysicalProperties",
                        typeof(System.Boolean)
                    },
                    {
                        "sensorSize",
                        typeof(UnityEngine.Vector2)
                    },
                    {
                        "lensShift",
                        typeof(UnityEngine.Vector2)
                    },
                    {
                        "focalLength",
                        typeof(System.Single)
                    },
                    {
                        "gateFit",
                        typeof(UnityEngine.Camera.GateFitMode)
                    },
                    {
                        "rect",
                        typeof(UnityEngine.Rect)
                    },
                    {
                        "pixelRect",
                        typeof(UnityEngine.Rect)
                    },
                    {
                        "targetTexture",
                        typeof(UnityEngine.RenderTexture)
                    },
                    {
                        "targetDisplay",
                        typeof(System.Int32)
                    },
                    {
                        "worldToCameraMatrix",
                        typeof(UnityEngine.Matrix4x4)
                    },
                    {
                        "projectionMatrix",
                        typeof(UnityEngine.Matrix4x4)
                    },
                    {
                        "nonJitteredProjectionMatrix",
                        typeof(UnityEngine.Matrix4x4)
                    },
                    {
                        "useJitteredProjectionMatrixForTransparentRendering",
                        typeof(System.Boolean)
                    },
                    {
                        "scene",
                        typeof(UnityEngine.SceneManagement.Scene)
                    },
                    {
                        "stereoSeparation",
                        typeof(System.Single)
                    },
                    {
                        "stereoConvergence",
                        typeof(System.Single)
                    },
                    {
                        "stereoTargetEye",
                        typeof(UnityEngine.StereoTargetEyeMask)
                    },
                    {
                        "enabled",
                        typeof(System.Boolean)
                    },
                    {
                        "tag",
                        typeof(System.String)
                    },
                    {
                        "name",
                        typeof(System.String)
                    },
                    {
                        "hideFlags",
                        typeof(UnityEngine.HideFlags)
                    }
                }

                #endregion
            },
                
            {
				#region UnityEngine.Light

                "UnityEngine.Light",
                new Dictionary<string, Type>
                {
                    
                    {
                        "type",
                        typeof(UnityEngine.LightType)
                    },
                    {
                        "shape",
                        typeof(UnityEngine.LightShape)
                    },
                    {
                        "spotAngle",
                        typeof(System.Single)
                    },
                    {
                        "innerSpotAngle",
                        typeof(System.Single)
                    },
                    {
                        "color",
                        typeof(UnityEngine.Color)
                    },
                    {
                        "colorTemperature",
                        typeof(System.Single)
                    },
                    {
                        "useColorTemperature",
                        typeof(System.Boolean)
                    },
                    {
                        "intensity",
                        typeof(System.Single)
                    },
                    {
                        "bounceIntensity",
                        typeof(System.Single)
                    },
                    {
                        "useBoundingSphereOverride",
                        typeof(System.Boolean)
                    },
                    {
                        "boundingSphereOverride",
                        typeof(UnityEngine.Vector4)
                    },
                    {
                        "useViewFrustumForShadowCasterCull",
                        typeof(System.Boolean)
                    },
                    {
                        "shadowCustomResolution",
                        typeof(System.Int32)
                    },
                    {
                        "shadowBias",
                        typeof(System.Single)
                    },
                    {
                        "shadowNormalBias",
                        typeof(System.Single)
                    },
                    {
                        "shadowNearPlane",
                        typeof(System.Single)
                    },
                    {
                        "useShadowMatrixOverride",
                        typeof(System.Boolean)
                    },
                    {
                        "shadowMatrixOverride",
                        typeof(UnityEngine.Matrix4x4)
                    },
                    {
                        "range",
                        typeof(System.Single)
                    },
                    {
                        "flare",
                        typeof(UnityEngine.Flare)
                    },
                    {
                        "bakingOutput",
                        typeof(UnityEngine.LightBakingOutput)
                    },
                    {
                        "cullingMask",
                        typeof(System.Int32)
                    },
                    {
                        "renderingLayerMask",
                        typeof(System.Int32)
                    },
                    {
                        "lightShadowCasterMode",
                        typeof(UnityEngine.LightShadowCasterMode)
                    },
                    {
                        "shadowRadius",
                        typeof(System.Single)
                    },
                    {
                        "shadowAngle",
                        typeof(System.Single)
                    },
                    {
                        "shadows",
                        typeof(UnityEngine.LightShadows)
                    },
                    {
                        "shadowStrength",
                        typeof(System.Single)
                    },
                    {
                        "shadowResolution",
                        typeof(UnityEngine.Rendering.LightShadowResolution)
                    },
                    {
                        "layerShadowCullDistances",
                        typeof(System.Single[])
                    },
                    {
                        "cookieSize",
                        typeof(System.Single)
                    },
                    {
                        "cookie",
                        typeof(UnityEngine.Texture)
                    },
                    {
                        "renderMode",
                        typeof(UnityEngine.LightRenderMode)
                    },
                    {
                        "areaSize",
                        typeof(UnityEngine.Vector2)
                    },
                    {
                        "lightmapBakeType",
                        typeof(UnityEngine.LightmapBakeType)
                    },
                    {
                        "enabled",
                        typeof(System.Boolean)
                    },
                    {
                        "tag",
                        typeof(System.String)
                    },
                    {
                        "name",
                        typeof(System.String)
                    },
                    {
                        "hideFlags",
                        typeof(UnityEngine.HideFlags)
                    }
                }

                #endregion
            },
                
            {
				#region UnityEngine.Transform

                "UnityEngine.Transform",
                new Dictionary<string, Type>
                {
                    
                    {
                        "position",
                        typeof(UnityEngine.Vector3)
                    },
                    {
                        "localPosition",
                        typeof(UnityEngine.Vector3)
                    },
                    {
                        "eulerAngles",
                        typeof(UnityEngine.Vector3)
                    },
                    {
                        "localEulerAngles",
                        typeof(UnityEngine.Vector3)
                    },
                    {
                        "right",
                        typeof(UnityEngine.Vector3)
                    },
                    {
                        "up",
                        typeof(UnityEngine.Vector3)
                    },
                    {
                        "forward",
                        typeof(UnityEngine.Vector3)
                    },
                    {
                        "rotation",
                        typeof(UnityEngine.Quaternion)
                    },
                    {
                        "localRotation",
                        typeof(UnityEngine.Quaternion)
                    },
                    {
                        "localScale",
                        typeof(UnityEngine.Vector3)
                    },
                    {
                        "parent",
                        typeof(UnityEngine.Transform)
                    },
                    {
                        "hasChanged",
                        typeof(System.Boolean)
                    },
                    {
                        "hierarchyCapacity",
                        typeof(System.Int32)
                    },
                    {
                        "tag",
                        typeof(System.String)
                    },
                    {
                        "name",
                        typeof(System.String)
                    },
                    {
                        "hideFlags",
                        typeof(UnityEngine.HideFlags)
                    }
                }

                #endregion
            },
                
            {
				#region UnityEngine.UI.Image

                "UnityEngine.UI.Image",
                new Dictionary<string, Type>
                {
                    
                    {
                        "sprite",
                        typeof(UnityEngine.Sprite)
                    },
                    {
                        "overrideSprite",
                        typeof(UnityEngine.Sprite)
                    },
                    {
                        "type",
                        typeof(UnityEngine.UI.Image.Type)
                    },
                    {
                        "preserveAspect",
                        typeof(System.Boolean)
                    },
                    {
                        "fillCenter",
                        typeof(System.Boolean)
                    },
                    {
                        "fillMethod",
                        typeof(UnityEngine.UI.Image.FillMethod)
                    },
                    {
                        "fillAmount",
                        typeof(System.Single)
                    },
                    {
                        "fillClockwise",
                        typeof(System.Boolean)
                    },
                    {
                        "fillOrigin",
                        typeof(System.Int32)
                    },
                    {
                        "alphaHitTestMinimumThreshold",
                        typeof(System.Single)
                    },
                    {
                        "useSpriteMesh",
                        typeof(System.Boolean)
                    },
                    {
                        "pixelsPerUnitMultiplier",
                        typeof(System.Single)
                    },
                    {
                        "material",
                        typeof(UnityEngine.Material)
                    },
                    {
                        "onCullStateChanged",
                        typeof(UnityEngine.UI.MaskableGraphic.CullStateChangedEvent)
                    },
                    {
                        "maskable",
                        typeof(System.Boolean)
                    },
                    {
                        "isMaskingGraphic",
                        typeof(System.Boolean)
                    },
                    {
                        "color",
                        typeof(UnityEngine.Color)
                    },
                    {
                        "raycastTarget",
                        typeof(System.Boolean)
                    },
                    {
                        "raycastPadding",
                        typeof(UnityEngine.Vector4)
                    },
                    {
                        "useGUILayout",
                        typeof(System.Boolean)
                    },
                    {
                        "enabled",
                        typeof(System.Boolean)
                    },
                    {
                        "tag",
                        typeof(System.String)
                    },
                    {
                        "name",
                        typeof(System.String)
                    },
                    {
                        "hideFlags",
                        typeof(UnityEngine.HideFlags)
                    }
                }

                #endregion
            }
        };

        #region Methods
        /*
#if UNITY_EDITOR

        /// <summary>
        /// Rebuilds the componentRegistry file.
        /// </summary>
        [UnityEditor.MenuItem("Tools/BricksBucket/ComponentRegistry/Monogum.BricksBucket.Core.Examples.DynamicProperties HardwiredComponents/Rebuild")]
        public static void Rebuild()
        {
            Monogum.BricksBucket.Core.Generics.Editor.HardwiredFileWriter.ReWriteFile(new HardwiredComponents());
        }

        /// <summary>
        /// Resets the componentRegistry file.
        /// </summary>
        [UnityEditor.MenuItem("Tools/BricksBucket/ComponentRegistry/Monogum.BricksBucket.Core.Examples.DynamicProperties HardwiredComponents/Reset")]
        public static void Reset()
        {
            Monogum.BricksBucket.Core.Generics.Editor.HardwiredFileWriter.ResetFile(new HardwiredComponents());
        }
        
#endif
        */
        #endregion

    }

}